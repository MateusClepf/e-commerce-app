version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
      target: ${NODE_ENV:-development}
    ports:
      - "${FRONTEND_PORT:-3000}:${CONTAINER_PORT:-3000}" 
    volumes:
      - type: bind
        source: ../frontend
        target: /app
      - type: volume
        source: frontend-node-modules
        target: /app/node_modules
      - type: bind
        source: ../docker/nginx.conf
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=https://shop-api.whereismypacket.net/api  # for local dev: http://localhost:5000/api
      - REACT_APP_PLACEHOLDER_IMAGE_URL=https://via.placeholder.com
      - NODE_ENV=${NODE_ENV:-development}
      - MONITORING_ORIGIN_1=https://static.cloudflareinsights.com
      - MONITORING_ORIGIN_2=https://js-agent.newrelic.com

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    ports:
      - "5000:5000"
    volumes:
      - type: bind
        source: ../backend
        target: /app
      - type: volume
        source: backend-node-modules
        target: /app/node_modules
    depends_on:
      - db
      - redis
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=ecommerce
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  frontend-node-modules:
  backend-node-modules:
  redis-data: